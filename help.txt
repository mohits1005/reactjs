1) Setup
npx create-react-app sample_react
cd sample_react
npm start
2)
simple dom - index.html
src > index.js > make component and shove it into html
3) Babel > babeljs.io converts template code(jsx) to ugly(js) code
4) Define state of a component inside class based template using constructor
5) Use setState method to modify the state object
6) Containers are components that have access to state
7) Redux
components in react-redux are similar to those in vanilla react
The container is the function (usually in a separate file) which gives the component props the special ability to interact with state
- mapStateToProps, used to link a property of the state object with a prop in the component
redux - application state and react -view to display state
application state is generated by reducer functions
- Button Click calls Action Creator
- Action Creator returns an action
- Action automatically sent to reducer
- Active Book Reducer changes state
- Containers will render the new props
8) Add .bind(this) to bind context to a function, should be done inside constructor
9) Middleware
Action -> Middleware(Manipulate action, log action or stop action) -> Reducer
redux-promise (npm)
redux-promise unwraps promise for us
10) React sparklines (npm)
